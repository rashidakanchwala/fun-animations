


.container {
  display: flex;
  flex-direction: column;
  align-items: center;
  overflow: hidden; /* Hide any overflowing content */
}

.section {
  width: 100vw;
  height: 100vh;
  position: relative;
  display: flex;
  justify-content: center;
  align-items: center;
  font-size: 24px;
}

.red {
  background-color: #FFC1C1;
}

.blue {
  background-color: black;
}

.green {
  background-size: cover;
  background-repeat: no-repeat;
  background-position: center center;
}


.yellow {
  background-color: #FFEE93;
}

.purple {
  background-color: #D9A2FF;
}

.scrollspy {
  position: fixed;
  top: 50%;
  right: 30px;
  transform: translateY(-50%);
  display: flex;
  flex-direction: column; /* Change to row to have dots in the same line */
  gap: 20px; /* Space between dots */
  z-index: 99;
}

.dot {
  position: relative;
  width: 20px; 
  height: 20px; 
  border-radius: 50%; 
  background: lightgray;
  transition: background 0.3s, border 0.3s;
}

.dot.active {
  background: lightgray;
  width: 30px; 
  height: 30px; 
  margin: -5px;
  border: 5px solid darkslategray; /* Adding a dark grey border for active state */

}



.invisible {
  visibility: hidden;
  opacity: 0;
}

.title {
  font-size: 48px;
  font-weight: bold;
  margin-bottom: 20px;
  color: white;
}

@keyframes lineGrowth {
  0% {
    height: 0;
  }
  15% {
    height: 20%;
  }
  25% {
    height: 20%;
  }
  40% {
    height: 40%;
  }
  50% {
    height: 40%;
  }
  65% {
    height: 60%;
  }
  75% {
    height: 60%;
  }
  90% {
    height: 80%;
  }
  100% {
    height: 100%;
  }
}


.keyline {
  position: absolute; /* or relative, based on your setup */
  top: 0;
  left:100px;
  width: 2px;
  background-color: #000;
  height: 0;
  animation: lineGrowth 15s forwards;
}


.keydot {
  position: fixed; /* Fixed positioning so dots don't move */
  left: 100px; /* adjust based on where you want the dots relative to viewport */
  transform: translateX(-50%);
  width: 20px;
  height: 20px;
  background-color: #000;
  border-radius: 50%;
  opacity: 0;
  transition: opacity 0.5s;
}

.keytext {
  position: fixed; /* Fixed positioning so dots don't move */
  left: 150px; /* adjust based on where you want the dots relative to viewport */
  transform: translateX(-50%);
  width: 20px;
  height: 20px;
  color: #000;
  opacity: 0;
  transition: opacity 0.5s;
}

.image-card {
  display: flex;
  flex-wrap: wrap; /* This will allow cards to wrap to the next line if there's not enough space */
  gap: 20px; /* Provides spacing between the cards */
}

.animated-box {
  background-color: white;
  width: 0;
  height:0;
  position: absolute;
  bottom: 100px;
  left: 100px;
  transition: width 1s ease-in-out;
  overflow: hidden; /* Hide the content initially */
}

/* Active animation states */
.animate .animated-box {
  width: 700px;
  height: 200px;
}

.box-title {
  opacity: 0;
  font-weight: 800;
  font-size: 50px;
  transition: opacity 0.5s ease-in-out;
}

.box-description {
  opacity: 0;
  transition: opacity 0.5s ease-in-out;
}

.animate .box-title, .animate .box-description {
  opacity: 1;
}

.image-carousel{
  display: flex;
  flex-direction: column;
  align-items: center;
  width: 90vw; /* Set a width for the container */
  overflow: hidden; /* Hide any overflowing content */
  position: relative; /* Needed if you want to absolutely position the images inside */
}

